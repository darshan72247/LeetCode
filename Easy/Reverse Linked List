/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        
        ListNode tempNode = new ListNode(0);
        ListNode currentNode = tempNode;
        currentNode.next = head;
        currentNode = currentNode.next;
        
        ArrayList<Integer> arr = new ArrayList<>();
        int pos = 0;
        
        while(head != null){
            arr.add(pos,head.val);
            // arr[pos] = head.val;
            head = head.next;
            pos += 1;
        }
        
        for(int i=arr.size()-1;i>=0;i--){
            
            currentNode.val = arr.get(i);
            
            // if(i == 0){
            //     currentNode.next = null;
            // }
            currentNode = currentNode.next;
        }
        
        return tempNode.next;
        

    }
}
